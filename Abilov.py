# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Abilov.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from functions import read_apartments_from_file  # Импорт функции из functions.py


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(784, 526)
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(50, 40, 521, 211))
        self.tableWidget.setRowCount(6)
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setObjectName("tableWidget")
        self.pushButton = QtWidgets.QPushButton(Dialog)
        self.pushButton.setGeometry(QtCore.QRect(60, 300, 111, 51))
        self.pushButton.setObjectName("pushButton")

        # Добавляем заголовки столбцов
        self.tableWidget.setHorizontalHeaderLabels(
            ["Улица", "№ дома", "№ квартиры", "Кол-во комнат", "Этаж"]
        )

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        # Подключение сигнала нажатия кнопки к слоту
        self.pushButton.clicked.connect(self.load_data)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton.setText(_translate("Dialog", "Загрузить данные"))

    def load_data(self):
        # Получаем данные из файла
        apartments = read_apartments_from_file("apartments.txt")

        # Очищаем таблицу
        self.tableWidget.setRowCount(0)

        # Заполняем таблицу
        for street_name, houses in apartments.items():
            for apartment in houses:
                row_index = self.tableWidget.rowCount()
                self.tableWidget.insertRow(row_index)
                self.tableWidget.setItem(row_index, 0, QtWidgets.QTableWidgetItem(street_name))
                self.tableWidget.setItem(row_index, 1, QtWidgets.QTableWidgetItem(apartment["house_number"]))
                self.tableWidget.setItem(row_index, 2, QtWidgets.QTableWidgetItem(str(apartment["apartment_number"])))
                self.tableWidget.setItem(row_index, 3, QtWidgets.QTableWidgetItem(str(apartment["rooms"])))
                self.tableWidget.setItem(row_index, 4, QtWidgets.QTableWidgetItem(str(apartment["floor"])))

    # ... ваш существующий код ...

    def read_apartments_from_file(filename):
        apartments = {}
        with open(filename, "r", encoding="utf-8") as file:
            for line in file:
                # Убираем лишние пробелы и разделяем по запятой
                parts = line.strip().split(",")
                if len(parts) == 5:  # Проверяем, что строка имеет 5 элементов
                    street, house_number, apartment_number, rooms, floor = parts
                    if street not in apartments:
                        apartments[street] = []
                    apartments[street].append(
                        {
                            "house_number": house_number,
                            "apartment_number": int(apartment_number),
                            "rooms": int(rooms),
                            "floor": int(floor),
                        }
                    )
        return apartments

    # ... ваш существующий код ...


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())