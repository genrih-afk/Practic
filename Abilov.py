# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Abilov.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(634, 340)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(40, 30, 535, 235))
        self.tableWidget.setRowCount(6)
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setObjectName("tableWidget")

        # Добавляем заголовки столбцов
        self.tableWidget.setHorizontalHeaderLabels(["Улица", "Номер дома", "Этаж", "Количество комнат", "Цена"])

        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(60, 270, 486, 25))
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(30)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.Append = QtWidgets.QPushButton(self.widget)
        self.Append.setObjectName("Append")
        self.horizontalLayout.addWidget(self.Append)
        self.Edit = QtWidgets.QPushButton(self.widget)
        self.Edit.setObjectName("Edit")
        self.horizontalLayout.addWidget(self.Edit)
        self.Delete = QtWidgets.QPushButton(self.widget)
        self.Delete.setObjectName("Delete")
        self.horizontalLayout.addWidget(self.Delete)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Подключаем функции к кнопкам
        self.pushButton.clicked.connect(self.load_data)
        self.Append.clicked.connect(self.add_row)
        self.Edit.clicked.connect(self.edit_data)
        self.Delete.clicked.connect(self.delete_row)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "Загрузить данные"))
        self.Append.setText(_translate("MainWindow", "Добавить данные"))
        self.Edit.setText(_translate("MainWindow", "Изменить данные"))
        self.Delete.setText(_translate("MainWindow", "Удалить данные"))

    def load_data(self):
        """Загружает данные из файла apartments.txt в таблицу."""
        with open("apartments.txt", "r", encoding='utf-8') as file:
            data = file.readlines()

        # Очищаем таблицу
        self.tableWidget.setRowCount(0)

        # Добавляем данные в таблицу
        for row, line in enumerate(data):
            # Разделяем строку на элементы
            elements = line.strip().split(",")
            self.tableWidget.insertRow(row)

            # Вставляем элементы в столбцы
            for col, element in enumerate(elements):
                self.tableWidget.setItem(row, col, QtWidgets.QTableWidgetItem(element))

    def add_row(self):
        """Добавляет новую строку в таблицу."""
        row_count = self.tableWidget.rowCount()
        self.tableWidget.insertRow(row_count)

    def edit_data(self):
        """Сохраняет изменения в таблице в файл apartments.txt."""
        rows = self.tableWidget.rowCount()
        with open("apartments.txt", "w", encoding='utf-8') as file:
            for row in range(rows):
                # Проверяем, была ли добавлена новая строка
                if self.tableWidget.item(row, 0) is not None:
                    street = self.tableWidget.item(row, 0).text()
                    house_number = self.tableWidget.item(row, 1).text()
                    floor = self.tableWidget.item(row, 2).text()
                    rooms = self.tableWidget.item(row, 3).text()
                    price = self.tableWidget.item(row, 4).text()
                    file.write(f"{street},{house_number},{floor},{rooms},{price}\n")

    def delete_row(self):
        """Удаляет выбранную строку из таблицы."""
        # Получаем индекс выбранной строки
        selected_row = self.tableWidget.currentRow()

        # Проверяем, выбрана ли строка
        if selected_row != -1:
            # Удаляем строку из таблицы
            self.tableWidget.removeRow(selected_row)

if __name__ == "__main__":
     import sys
     app = QtWidgets.QApplication(sys.argv)
     MainWindow = QtWidgets.QMainWindow()
     ui = Ui_MainWindow()
     ui.setupUi(MainWindow)
     MainWindow.show()
     sys.exit(app.exec_())
